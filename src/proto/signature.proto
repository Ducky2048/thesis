syntax = "proto3";

option go_package = "verifier";

enum MACAlgorithm {
    HMAC_SHA2_256 = 0;
    HMAC_SHA2_512 = 1;
    HMAC_SHA3_256 = 2;
    HMAC_SHA3_512 = 3;
    POLY1305_AES = 4;
}

enum HashAlgorithm {
    SHA2_256 = 0;
    SHA2_512 = 1;
    SHA3_256 = 2;
    SHA3_512 = 3;
}

enum SignatureLevel {
    ADVANCED = 0;
    QUALIFIED = 1;
}

message SignatureData {
    repeated bytes salted_document_hash = 1;
    HashAlgorithm hash_algorithm = 2;
    bytes mac_key = 3;
    MACAlgorithm mac_algorithm = 4;
    SignatureLevel signature_level = 5;
    bytes id_token = 6;
    repeated bytes jwk_idp = 7;
    // maps the fingerprint of the jwk cert to its ltv information
    map<string, LTV> ltv_idp = 8;
}

message LTV {
    bytes ocsp = 1;
    bytes crl = 2;
}

message SignatureFile {
    // pkcs7 enveloped and signed,
    // containing CA chain,
    // and if ltv is enabled CRL and OCSP as well
    bytes signature_data_in_pkcs7 = 1;
    // pkcs7 enveloped rfc3161 timestamp (not signed, just enveloped)
    // along with CA chain
    // and if ltv is enabled CRL and OCSP as well
    // each later timestamp authenticates a former one
    // thus forming a chain for archival
    repeated bytes rfc3161_in_pkcs7 = 2;
}