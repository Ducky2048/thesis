// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/signature.proto

package signature

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HashAlgorithm int32

const (
	HashAlgorithm_SHA2_256 HashAlgorithm = 0
	HashAlgorithm_SHA2_512 HashAlgorithm = 1
	HashAlgorithm_SHA3_256 HashAlgorithm = 2
	HashAlgorithm_SHA3_512 HashAlgorithm = 3
)

var HashAlgorithm_name = map[int32]string{
	0: "SHA2_256",
	1: "SHA2_512",
	2: "SHA3_256",
	3: "SHA3_512",
}
var HashAlgorithm_value = map[string]int32{
	"SHA2_256": 0,
	"SHA2_512": 1,
	"SHA3_256": 2,
	"SHA3_512": 3,
}

func (x HashAlgorithm) String() string {
	return proto.EnumName(HashAlgorithm_name, int32(x))
}
func (HashAlgorithm) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_signature_25f88a70c72c2bde, []int{0}
}

type Signature_SignatureFormat int32

const (
	Signature_RSA_PSS       Signature_SignatureFormat = 0
	Signature_ECDSA_ED25519 Signature_SignatureFormat = 1
)

var Signature_SignatureFormat_name = map[int32]string{
	0: "RSA_PSS",
	1: "ECDSA_ED25519",
}
var Signature_SignatureFormat_value = map[string]int32{
	"RSA_PSS":       0,
	"ECDSA_ED25519": 1,
}

func (x Signature_SignatureFormat) String() string {
	return proto.EnumName(Signature_SignatureFormat_name, int32(x))
}
func (Signature_SignatureFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_signature_25f88a70c72c2bde, []int{1, 0}
}

type Subject struct {
	HashAlgorithm        HashAlgorithm `protobuf:"varint,1,opt,name=hash_algorithm,json=hashAlgorithm,proto3,enum=HashAlgorithm" json:"hash_algorithm,omitempty"`
	X509PublicKey        string        `protobuf:"bytes,2,opt,name=x509_public_key,json=x509PublicKey,proto3" json:"x509_public_key,omitempty"`
	X509Authority        string        `protobuf:"bytes,3,opt,name=x509_authority,json=x509Authority,proto3" json:"x509_authority,omitempty"`
	HashValue            string        `protobuf:"bytes,4,opt,name=hash_value,json=hashValue,proto3" json:"hash_value,omitempty"`
	ValidFrom            uint64        `protobuf:"varint,5,opt,name=valid_from,json=validFrom,proto3" json:"valid_from,omitempty"`
	ValidTo              uint64        `protobuf:"varint,6,opt,name=valid_to,json=validTo,proto3" json:"valid_to,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Subject) Reset()         { *m = Subject{} }
func (m *Subject) String() string { return proto.CompactTextString(m) }
func (*Subject) ProtoMessage()    {}
func (*Subject) Descriptor() ([]byte, []int) {
	return fileDescriptor_signature_25f88a70c72c2bde, []int{0}
}
func (m *Subject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subject.Unmarshal(m, b)
}
func (m *Subject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subject.Marshal(b, m, deterministic)
}
func (dst *Subject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subject.Merge(dst, src)
}
func (m *Subject) XXX_Size() int {
	return xxx_messageInfo_Subject.Size(m)
}
func (m *Subject) XXX_DiscardUnknown() {
	xxx_messageInfo_Subject.DiscardUnknown(m)
}

var xxx_messageInfo_Subject proto.InternalMessageInfo

func (m *Subject) GetHashAlgorithm() HashAlgorithm {
	if m != nil {
		return m.HashAlgorithm
	}
	return HashAlgorithm_SHA2_256
}

func (m *Subject) GetX509PublicKey() string {
	if m != nil {
		return m.X509PublicKey
	}
	return ""
}

func (m *Subject) GetX509Authority() string {
	if m != nil {
		return m.X509Authority
	}
	return ""
}

func (m *Subject) GetHashValue() string {
	if m != nil {
		return m.HashValue
	}
	return ""
}

func (m *Subject) GetValidFrom() uint64 {
	if m != nil {
		return m.ValidFrom
	}
	return 0
}

func (m *Subject) GetValidTo() uint64 {
	if m != nil {
		return m.ValidTo
	}
	return 0
}

type Signature struct {
	SignatureFormat      Signature_SignatureFormat `protobuf:"varint,1,opt,name=signature_format,json=signatureFormat,proto3,enum=Signature_SignatureFormat" json:"signature_format,omitempty"`
	HashAlgorithm        HashAlgorithm             `protobuf:"varint,2,opt,name=hash_algorithm,json=hashAlgorithm,proto3,enum=HashAlgorithm" json:"hash_algorithm,omitempty"`
	Rfc3161Timestamp     []byte                    `protobuf:"bytes,3,opt,name=rfc3161_timestamp,json=rfc3161Timestamp,proto3" json:"rfc3161_timestamp,omitempty"`
	SignatureValue       string                    `protobuf:"bytes,4,opt,name=signature_value,json=signatureValue,proto3" json:"signature_value,omitempty"`
	Subject              []byte                    `protobuf:"bytes,5,opt,name=subject,proto3" json:"subject,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Signature) Reset()         { *m = Signature{} }
func (m *Signature) String() string { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()    {}
func (*Signature) Descriptor() ([]byte, []int) {
	return fileDescriptor_signature_25f88a70c72c2bde, []int{1}
}
func (m *Signature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Signature.Unmarshal(m, b)
}
func (m *Signature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Signature.Marshal(b, m, deterministic)
}
func (dst *Signature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Signature.Merge(dst, src)
}
func (m *Signature) XXX_Size() int {
	return xxx_messageInfo_Signature.Size(m)
}
func (m *Signature) XXX_DiscardUnknown() {
	xxx_messageInfo_Signature.DiscardUnknown(m)
}

var xxx_messageInfo_Signature proto.InternalMessageInfo

func (m *Signature) GetSignatureFormat() Signature_SignatureFormat {
	if m != nil {
		return m.SignatureFormat
	}
	return Signature_RSA_PSS
}

func (m *Signature) GetHashAlgorithm() HashAlgorithm {
	if m != nil {
		return m.HashAlgorithm
	}
	return HashAlgorithm_SHA2_256
}

func (m *Signature) GetRfc3161Timestamp() []byte {
	if m != nil {
		return m.Rfc3161Timestamp
	}
	return nil
}

func (m *Signature) GetSignatureValue() string {
	if m != nil {
		return m.SignatureValue
	}
	return ""
}

func (m *Signature) GetSubject() []byte {
	if m != nil {
		return m.Subject
	}
	return nil
}

func init() {
	proto.RegisterType((*Subject)(nil), "Subject")
	proto.RegisterType((*Signature)(nil), "Signature")
	proto.RegisterEnum("HashAlgorithm", HashAlgorithm_name, HashAlgorithm_value)
	proto.RegisterEnum("Signature_SignatureFormat", Signature_SignatureFormat_name, Signature_SignatureFormat_value)
}

func init() { proto.RegisterFile("proto/signature.proto", fileDescriptor_signature_25f88a70c72c2bde) }

var fileDescriptor_signature_25f88a70c72c2bde = []byte{
	// 376 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xd1, 0x6b, 0xba, 0x50,
	0x1c, 0xc5, 0xd3, 0xfa, 0x65, 0x7e, 0x7f, 0x69, 0x76, 0x61, 0xe0, 0x06, 0x83, 0x08, 0xb6, 0xc5,
	0x06, 0x6d, 0x1a, 0x06, 0x3d, 0xca, 0xaa, 0x05, 0x7b, 0x09, 0x8d, 0xbd, 0x5e, 0x6e, 0xcd, 0xd2,
	0x4d, 0x77, 0x43, 0xaf, 0xb1, 0xfe, 0xa7, 0xfd, 0x61, 0xfb, 0x33, 0x86, 0xb7, 0xb4, 0x35, 0xf6,
	0xb0, 0x37, 0xcf, 0xe7, 0x1c, 0xd1, 0x73, 0xee, 0x85, 0x93, 0x75, 0x4c, 0x19, 0xbd, 0x4d, 0x82,
	0xd5, 0x1b, 0x61, 0x69, 0xec, 0x75, 0xb9, 0x6e, 0x7f, 0x0a, 0x20, 0xb9, 0xe9, 0xfc, 0xc5, 0x5b,
	0x30, 0x64, 0x81, 0xea, 0x93, 0xc4, 0xc7, 0x24, 0x5c, 0xd1, 0x38, 0x60, 0x7e, 0xa4, 0x0b, 0x2d,
	0xa1, 0xa3, 0x9a, 0x6a, 0x77, 0x42, 0x12, 0xdf, 0xce, 0xa9, 0xa3, 0xf8, 0xdf, 0x25, 0xba, 0x84,
	0xc6, 0xbb, 0x75, 0x37, 0xc0, 0xeb, 0x74, 0x1e, 0x06, 0x0b, 0xfc, 0xea, 0x6d, 0x75, 0xb1, 0x25,
	0x74, 0x64, 0x47, 0xc9, 0xf0, 0x94, 0xd3, 0x47, 0x6f, 0x8b, 0x2e, 0x40, 0xe5, 0x39, 0x92, 0x32,
	0x3f, 0x7b, 0x75, 0xab, 0x97, 0x0f, 0x31, 0x3b, 0x87, 0xe8, 0x1c, 0x80, 0xff, 0xc5, 0x86, 0x84,
	0xa9, 0xa7, 0x57, 0x78, 0x44, 0xce, 0xc8, 0x53, 0x06, 0x32, 0x7b, 0x43, 0xc2, 0xe0, 0x19, 0x2f,
	0x63, 0x1a, 0xe9, 0xff, 0x5a, 0x42, 0xa7, 0xe2, 0xc8, 0x9c, 0x8c, 0x63, 0x1a, 0xa1, 0x53, 0xa8,
	0xed, 0x6c, 0x46, 0xf5, 0x2a, 0x37, 0x25, 0xae, 0x67, 0xb4, 0xfd, 0x21, 0x82, 0xec, 0xe6, 0xf5,
	0xd1, 0x08, 0xb4, 0x62, 0x0b, 0xbc, 0xa4, 0x71, 0x44, 0xd8, 0xbe, 0xee, 0x59, 0xb7, 0x48, 0x1d,
	0x9e, 0xc6, 0x3c, 0xe1, 0x34, 0x92, 0x63, 0xf0, 0xcb, 0x66, 0xe2, 0x5f, 0x36, 0xbb, 0x81, 0x66,
	0xbc, 0x5c, 0xf4, 0x8c, 0xbe, 0x81, 0x59, 0x10, 0x79, 0x09, 0x23, 0xd1, 0x9a, 0xcf, 0x51, 0x77,
	0xb4, 0xbd, 0x31, 0xcb, 0x39, 0xba, 0x82, 0xc3, 0x67, 0x8f, 0x66, 0x51, 0x0b, 0xbc, 0xdb, 0x46,
	0x07, 0x29, 0xd9, 0x9d, 0x25, 0x1f, 0xa6, 0xee, 0xe4, 0xb2, 0x6d, 0x40, 0xe3, 0x47, 0x15, 0xf4,
	0x1f, 0x24, 0xc7, 0xb5, 0xf1, 0xd4, 0x75, 0xb5, 0x12, 0x6a, 0x82, 0x32, 0xba, 0x1f, 0xba, 0x36,
	0x1e, 0x0d, 0x4d, 0xcb, 0x32, 0x06, 0x9a, 0x70, 0xfd, 0x00, 0xca, 0x51, 0x05, 0x54, 0x87, 0x9a,
	0x3b, 0xb1, 0x4d, 0x6c, 0x5a, 0x7d, 0xad, 0x54, 0x28, 0xcb, 0x30, 0x35, 0x61, 0xaf, 0x7a, 0xdc,
	0x13, 0x0b, 0x95, 0x79, 0xe5, 0x79, 0x95, 0xdf, 0xb4, 0xde, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x0b, 0xe7, 0x86, 0xf2, 0x82, 0x02, 0x00, 0x00,
}
