title Signature Generation

actor Signer
actor Signing Service
actor Authenticator(IDP)
participant HSM
actor Certificate Authority
participant TSS

activate Signer
Signer->Signer: generate hash(es)
deactivate Signer
Signer->Signing Service: send hash(es)
activate Signing Service
Signing Service->Signing Service: generate initial nonce
Signing Service->Signing Service: calculate intermediate nonce
note right of Signing Service: intermediate nonce:\nthe intermediate nonce is random\nhash(hash(es) + initial nonce + server secret)
Signing Service->Signing Service: generate OIDC nonce
note right of Signing Service:OIDC nonce:\nhash(hash(es) + intermediate nonce).
Signing Service->Signing Service: generate IDP redirects
Signer<--Signing Service: return IDP choices, intial nonce, intermediate nonce
deactivate Signing Service
activate Signer
Signer->Signer: choose IDP
Signer->Authenticator(IDP): follow redirect
deactivate Signer
Authenticator(IDP)->Signer: ask credentials
Signer->Authenticator(IDP): send credentials
activate Authenticator(IDP)
Authenticator(IDP)->Authenticator(IDP): validate credentials
Signer<--Authenticator(IDP): return ID token
deactivate Authenticator(IDP)
Signer->Signing Service: send ID token, hash(es), initial nonce, intermediate nonce
activate Signing Service
Signing Service->Signing Service: verify intermediate nonce
Signing Service->Signing Service: verify OIDC nonce
Signing Service->Signing Service: verify ID token locally
opt remote verification
Signing Service->Authenticator(IDP): send ID token
activate Authenticator(IDP)
Authenticator(IDP)->Authenticator(IDP): verify ID token
Signing Service<--Authenticator(IDP): send signed response
deactivate Authenticator(IDP)
end
Signing Service->HSM: request new signing key
deactivate Signing Service
activate HSM
HSM->HSM: generate key and CSR
Signing Service<--HSM: send CSR
deactivate HSM
Signing Service->Certificate Authority: send CSR
activate Certificate Authority
Certificate Authority->Certificate Authority: sign CSR and generate certificate
Signing Service<--Certificate Authority: send certificate
deactivate Certificate Authority
Signing Service->HSM: send hash
activate HSM
HSM->HSM: sign hash
Signing Service<--HSM: send signed hash
deactivate HSM
activate Signing Service
Signing Service->Signing Service: create intermediate signature
note right of Signing Service: The intermediate signature consists of:\nSigned hash(es), ID token, intermediate nonce.
Signing Service->TSS: send intermediate signature
deactivate Signing Service
activate TSS
TSS->TSS: add timestamp and signature
Signing Service<--TSS: send timestamped signature
deactivate TSS
activate Signing Service
Signing Service->Signing Service: add timestamp and all chains to the signature
Signer<--Signing Service: return final signature
deactivate Signing Service